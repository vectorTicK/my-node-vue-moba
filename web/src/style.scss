// reset css
* {
    box-sizing: border-box;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    background-color: #f1f1f1;
}

a {
    color: #999;
}

// colors
$colors: ("primary": #db9e3f,
    "white": #fff,
    "light": #f9f9f9,
    "grey": #999,
    "dark-1":#343440,
    "dark": #222,
    "black": #000);

// text
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
}

@each $colorKey,
$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        background-color: $color;
    }
}

// font size
$base-font-size: 1rem;
$font-sizes: (xxs: 0.6154, // 8px
    xs: 0.7692, // 10px
    sm: 0.9231, // 12px
    md: 1, //13x
    lg: 1.0769, //14px
    xl: 1.2308, //16px
);

@each $key,
$size in $font-sizes {
    .fs-#{$key} {
        font-size: $size * $base-font-size;
    }
}

// flex
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

$flex-jc:(start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around);

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai:(start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch);

@each $key,
$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

// spacing
// .mt-1 margin top level 1
$spacing-types: (m: margin,
    p: padding);
$spacing-directions: (t: top,
    r: right,
    b: bottom,
    l: left);
$spacing-base-size: 1rem;
$spacing-sizes: (0:0,
    1:0.25,
    2:0.5,
    3:1,
    4:1.5,
    5:3);

@each $type-key,
$type-value in $spacing-types {
    @each $direction-key,
    $direction-value in $spacing-directions {
        @each $key,
        $size in $spacing-sizes {
            .#{$type-key}#{$direction-key}-#{$key} {
                #{$type-value}-#{$direction-value}: $size*$spacing-base-size;
            }
            // .m-0,p-0
            .#{$type-key}-#{$key} {
                #{$type-value}: $size*$spacing-base-size;
            }
            // .mx-0
            .#{$type-key}x-#{$key} {
                #{$type-value}-left: $size*$spacing-base-size;
                #{$type-value}-right: $size*$spacing-base-size;
            }
            // .my-0
            .#{$type-key}y-#{$key} {
                #{$type-value}-top: $size*$spacing-base-size;
                #{$type-value}-bottom: $size*$spacing-base-size;
            }
        }
    }
}